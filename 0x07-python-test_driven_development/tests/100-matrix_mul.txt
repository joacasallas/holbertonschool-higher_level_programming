>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]
>>> matrix_mul(1, [[3, 4], [5, 6]])
Traceback (most recent call last):
...
TypeError: m_a must be a list
>>> matrix_mul([[1, 2], [1, 2]], 4)
Traceback (most recent call last):
...
TypeError: m_b must be a list
>>> matrix_mul([[1, 2], 3], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: object of type 'int' has no len()
>>> matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul([["a", 2], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: unsupported operand type(s) for +=: 'int' and 'str'
>>> matrix_mul([[1], [3, 4]], [[2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "a"]])
Traceback (most recent call last):
...
TypeError: unsupported operand type(s) for +=: 'int' and 'str'
>>> matrix_mul([[1, 2], [3, 4, 6]], [[2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul([[1, 2], [3, 4, 6], [3, 4, 6], [3, 4, 6]], [[2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
